using System;

namespace Second_part
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            string userInput = "";
            bool isInputCorrect = false;

            int playerHealth = 90000;
            int maxPlayerHealth = 90000;
            int playerMana = 10000;
            int maxMana = 10000;
            bool isManaEnough = true;
            int enemyHealth = 1000000;
            int maxEnemyHealth = 1000000;
            bool isPlayerAlive = true;
            bool isEnemyAlive = true;
            int finalPlayerDamage = 0;
            int finalEnemyDamage = 0;

            //Атака игрока от 0 до 10.

            int playerAttackMinimum = 1;
            int playerAttackMaximum = 10;
            int playerAttack;

            //Потенциальный урон заклинаний в процентах. Минимально 1000, максимально 8000.
            //Despair Можно использовать только при наличие огненного эффекта, а Flare при наличие ледяного эффекта.

            int potencyOfIce1 = 1000;
            int potencyOfIce2 = 2000;
            int potencyOfIce3 = 3300;
            int potencyOfFlare = 6000;
            int potencyOfFire1 = 1600;
            int potencyOfFire2 = 2600;
            int potencyOfFire3 = 4200;
            int potencyOfDespair = 8000;

            bool isUsingDreaming = false;
            int dreaming = 4000;
            int dreamingCount = 3;
            int dreamingCountDown = 1;

            bool isUsingManaward = false;
            int manaward = 2;
            int manawardCount = 3;
            int manawardCountDown = 3;

            //Усиление действующее при использовании заклинания одного типа: огонь/лёд.
            //Если комбо прерывается, то усиление исчезает. Минимально 10, максимально 35.

            bool isIceEffectActive = false;
            int iceMinimum = 1;
            int iceMaximum = 4;
            int iceEffect = random.Next(iceMinimum, iceMaximum);

            bool isFireEffectActive = false;
            int fireMinimum = 2;
            int fireMaximum = 5;
            int fireEffect = random.Next(fireMinimum, fireMaximum);

            //Предметы: Зелье (+Здоровье) и эфир (+Мана)

            int potionRecover = 45000;
            int etherRecover = 3000;
            int amountOfPotions = 25;
            int amountOfEthers = 5;

            //Урон врага.

            int damageMultiplier = 2;
            int enemyAttackPotency = 3000;
            int enemyAttackMinimum = 5;
            int enemyAttackMaximum = 10;
            int enemyAttack;

            //Основная часть программы.

            Console.WriteLine($"Вам нужно победить стража. Как только его здоровье уменьшится до половины, он будет атаковать в {damageMultiplier} раз(а) сильнее. Удачи!\n");

            while (isPlayerAlive && isEnemyAlive)
            {
                isInputCorrect = false;

                if (isUsingDreaming)
                {
                    if (dreamingCount > 0)
                    {
                        if (playerMana + dreaming > 10000)
                        {
                            playerMana = maxMana;
                            dreamingCount--;
                        }
                        else
                        {
                            playerMana += dreaming;
                            dreamingCount--;
                        }
                    }
                    else if (dreamingCountDown > 1)
                    {
                        dreamingCountDown--;
                    }
                    else
                    {
                        isUsingDreaming = false;
                        dreamingCount = 3;
                        dreamingCountDown = 1;
                    }
                }

                Console.ForegroundColor = ConsoleColor.Blue;
                Console.Write("Чёрный маг (Игрок) ");
                Console.ForegroundColor = ConsoleColor.Green;
                Console.Write($"HP: {playerHealth} / {maxPlayerHealth}, ");
                Console.ForegroundColor = ConsoleColor.Magenta;
                Console.Write($"MP: {playerMana}");
                Console.ForegroundColor = ConsoleColor.Yellow;
                Console.Write(" |> > > >| ");

                Console.ForegroundColor = ConsoleColor.Red;
                Console.Write("Страж (Враг) ");
                Console.ForegroundColor = ConsoleColor.Green;
                Console.WriteLine($"HP: {enemyHealth} / {maxEnemyHealth}\n");

                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.WriteLine("ИНФОРМАЦИЯ О БОЕ:");
                Console.WriteLine($"ИГРОК >>>> {finalPlayerDamage} >>>> ВРАГ");
                Console.Write($"ИГРОК <<<< {finalEnemyDamage} <<<< ВРАГ");

                if (enemyHealth <= maxEnemyHealth / 2)
                {
                    Console.WriteLine(" (УРОН x2)\n");
                }
                else
                {
                    Console.WriteLine("\n");
                }

                Console.ForegroundColor = ConsoleColor.Yellow;
                Console.WriteLine("ТАКТИЧЕСКОЕ МЕНЮ:\nskip - Пропустить ход.");
                Console.ForegroundColor = ConsoleColor.DarkRed;
                Console.WriteLine($"\n    АТАКА:\n1 - Лёд I: {potencyOfIce1} MP (+Ледяной эффект I)\n2 - Лёд II: {potencyOfIce2} MP (!Комбо при наличии ледяного эффекта)\n3 - Лёд III: {potencyOfIce3} MP (!Комбо при наличии ледяного эффекта)\nice - Вспышка: {potencyOfFlare} MP (!Необходим Ледяной эффект)\n4 - Огонь I: {potencyOfFire1} MP (+Огненный эффект I)\n5 - Огонь II: {potencyOfFire2} MP (!Комбо при наличии огненного эффекта)\n6 - Огонь III: {potencyOfFire3} MP (!Комбо при наличии огненного эффекта)\nfire - Отчаяние: {potencyOfDespair} MP (!Необходим Огненный эффект)\n");

                Console.ForegroundColor = ConsoleColor.DarkGreen;
                Console.WriteLine($"    ПРЕДМЕТЫ:\npn - Зелье (Восстанавливает {potionRecover} здоровья). Осталось: {amountOfPotions}\ner - Эфир (Восстанавливает {etherRecover} маны). Осталось: {amountOfEthers}\n");

                Console.ForegroundColor = ConsoleColor.DarkBlue;
                Console.WriteLine($"    ЗАЩИТА/ВОССТАНОВЛЕНИЕ (При использовании ход не будет завершён.):\ndg - Сновидения (Восстанавливает {dreaming} маны/ход. Действует {dreamingCount} хода. КД {dreamingCountDown} ход.)\nmd - Защита (Уменьшает входящий урон в {manaward} раза. Действует {manawardCount} хода. КД {manawardCountDown} хода.)\n");

                Console.ForegroundColor = ConsoleColor.DarkGray;
                Console.WriteLine("НАЛОЖЕННЫЕ ЭФФЕКТЫ:");

                if (isIceEffectActive)
                {
                    Console.WriteLine("+Ледяной эффект");
                }

                if (isFireEffectActive)
                {
                    Console.WriteLine("+Огненный эффект");
                }

                if (isUsingDreaming && dreamingCount > 0)
                {
                    Console.WriteLine($"+Сновидения. Осталось {dreamingCount} ход(а).");
                }
                else if (isUsingDreaming && dreamingCount <= 0)
                {
                    Console.WriteLine($"-Сновидения. КД: осталось {dreamingCountDown} ход(а).");
                }

                if (isUsingManaward && manawardCount > 0)
                {
                    Console.WriteLine($"+Защита. Осталось {manawardCount} ход(а).");
                }
                else if (isUsingManaward && manawardCount <= 0)
                {
                    Console.WriteLine($"-Защита. КД: Осталось {manawardCountDown} ход(а).");
                }

                while (isInputCorrect == false)
                {
                    isManaEnough = true;
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    Console.Write("\n>>>> ");
                    userInput = Console.ReadLine();
                    playerAttack = random.Next(playerAttackMinimum, playerAttackMaximum);

                    switch (userInput)
                    {
                        case "pn":
                            if (amountOfPotions > 0)
                            {
                                if (playerHealth + potionRecover >= maxPlayerHealth)
                                {
                                    playerHealth = maxPlayerHealth;
                                }
                                else
                                {
                                    playerHealth += potionRecover;
                                }

                                amountOfPotions--;
                                isInputCorrect = true;
                            }
                            else
                            {
                                Console.WriteLine("Зелья закончились");
                            }
                            break;
                        case "er":
                            if (amountOfEthers > 0)
                            {
                                if (playerMana + etherRecover >= maxMana)
                                {
                                    playerMana = maxMana;
                                }
                                else
                                {
                                    playerMana += etherRecover;
                                }

                                amountOfEthers--;
                                isInputCorrect = true;
                            }
                            else
                            {
                                Console.WriteLine("Эфир закончился");
                            }
                            break;
                        case "md":
                            if (isUsingManaward)
                            {
                                Console.WriteLine($"Способность Защита используется или КД ещё не прошло");
                            }
                            else
                            {
                                isUsingManaward = true;
                            }
                            break;
                        case "dg":
                            if (isUsingDreaming)
                            {
                                Console.WriteLine($"Способность Защита используется или КД ещё не прошло");
                            }
                            else
                            {
                                isUsingDreaming = true;
                            }
                            break;
                        case "1":
                            if (playerMana - potencyOfIce1 <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfIce1;
                            }

                            if (isManaEnough)
                            {
                                if (isFireEffectActive)
                                {
                                    isFireEffectActive = false;
                                }

                                if (isIceEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfIce1 * iceEffect;
                                    enemyHealth -= finalPlayerDamage;
                                }
                                else
                                {
                                    finalPlayerDamage = playerAttack * potencyOfIce1;
                                    enemyHealth -= finalPlayerDamage;
                                    isIceEffectActive = true;
                                }

                                isInputCorrect = true;
                            }
                            break;
                        case "2":
                            if (playerMana - potencyOfIce2 <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfIce2;
                            }

                            if (isManaEnough)
                            {
                                if (isFireEffectActive)
                                {
                                    isFireEffectActive = false;
                                }

                                if (isIceEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfIce2 * iceEffect;
                                    enemyHealth -= finalPlayerDamage;
                                }
                                else
                                {
                                    finalPlayerDamage = playerAttack * potencyOfIce2;
                                    enemyHealth -= finalPlayerDamage;
                                }

                                isInputCorrect = true;
                            }
                            break;
                        case "3":
                            if (playerMana - potencyOfIce3 <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfIce3;
                            }

                            if (isManaEnough)
                            {
                                if (isFireEffectActive)
                                {
                                    isFireEffectActive = false;
                                }

                                if (isIceEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfIce3 * iceEffect;
                                    enemyHealth -= finalPlayerDamage;
                                }
                                else
                                {
                                    finalPlayerDamage = playerAttack * potencyOfIce3;
                                    enemyHealth -= finalPlayerDamage;
                                }

                                isInputCorrect = true;
                            }
                            break;
                        case "ice":
                            if (playerMana - potencyOfFlare <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfFlare;
                            }

                            if (isManaEnough)
                            {
                                if (isIceEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfFlare * iceEffect;
                                    enemyHealth -= finalPlayerDamage;
                                    isIceEffectActive = false;
                                    isInputCorrect = true;
                                }
                                else
                                {
                                    Console.WriteLine("Для атаки необходим ледяной эффект.");
                                    playerMana += potencyOfFlare;
                                }
                            }
                            break;
                        case "4":
                            if (playerMana - potencyOfFire1 <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfFire1;
                            }

                            if (isManaEnough)
                            {
                                if (isIceEffectActive)
                                {
                                    isIceEffectActive = false;
                                }

                                if (isFireEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfFire1 * fireEffect;
                                    enemyHealth -= finalPlayerDamage;
                                }
                                else
                                {
                                    finalPlayerDamage = playerAttack * potencyOfFire1;
                                    enemyHealth -= finalPlayerDamage;
                                    isFireEffectActive = true;
                                }

                                isInputCorrect = true;
                            }
                            break;
                        case "5":
                            if (playerMana - potencyOfFire2 <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfFire2;
                            }

                            if (isManaEnough)
                            {
                                if (isIceEffectActive)
                                {
                                    isIceEffectActive = false;
                                }

                                if (isFireEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfFire2 * fireEffect;
                                    enemyHealth -= finalPlayerDamage;
                                }
                                else
                                {
                                    finalPlayerDamage = playerAttack * potencyOfFire2;
                                    enemyHealth -= finalPlayerDamage;
                                }

                                isInputCorrect = true;
                            }
                            break;
                        case "6":
                            if (playerMana - potencyOfFire3 <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfFire3;
                            }

                            if (isManaEnough)
                            {
                                if (isIceEffectActive)
                                {
                                    isIceEffectActive = false;
                                }

                                if (isFireEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfFire3 * fireEffect;
                                    enemyHealth -= finalPlayerDamage;
                                }
                                else
                                {
                                    finalPlayerDamage = playerAttack * potencyOfFire3;
                                    enemyHealth -= finalPlayerDamage;
                                }

                                isInputCorrect = true;
                            }
                            break;
                        case "fire":
                            if (playerMana - potencyOfDespair <= 0)
                            {
                                Console.WriteLine("Не хватает маны.");
                                isManaEnough = false;
                            }
                            else
                            {
                                playerMana -= potencyOfDespair;
                            }

                            if (isManaEnough)
                            {
                                if (isFireEffectActive)
                                {
                                    finalPlayerDamage = playerAttack * potencyOfDespair * fireEffect;
                                    enemyHealth -= finalPlayerDamage;
                                    isFireEffectActive = false;
                                    isInputCorrect = true;
                                }
                                else
                                {
                                    Console.WriteLine("Для атаки необходим огненный эффект.");
                                    playerMana += potencyOfDespair;
                                }
                            }
                            break;
                        case "skip":
                            isInputCorrect = true;
                            break;
                        default:
                            Console.WriteLine("Команда не распознана.");
                            break;
                    }
                }

                enemyAttack = random.Next(enemyAttackMinimum, enemyAttackMaximum);

                if (enemyHealth >= maxEnemyHealth / 2)
                {
                    finalEnemyDamage = enemyAttack * enemyAttackPotency;
                }
                else
                {
                    finalEnemyDamage = enemyAttack * enemyAttackPotency * damageMultiplier;
                }

                if (isUsingManaward)
                {
                    if (manawardCount > 0)
                    {
                        finalEnemyDamage /= 2;
                        manawardCount--;
                    }
                    else if (manawardCountDown > 1)
                    {
                        manawardCountDown--;
                    }
                    else
                    {
                        isUsingManaward = false;
                        manawardCount = 3;
                        manawardCountDown = 3;
                    }
                }

                playerHealth -= finalEnemyDamage;

                if (playerHealth <= 0)
                {
                    isPlayerAlive = false;
                }
                if (enemyHealth <= 0)
                {
                    isEnemyAlive = false;
                }

                Console.Clear();
            }

            if (!isPlayerAlive && !isEnemyAlive)
            {
                Console.WriteLine("Вы и враг погибли.");
            }
            else if (!isPlayerAlive)
            {
                Console.WriteLine("Вы пали в бою.");
            }
            else
            {
                Console.WriteLine("Победа! Враг повержен.");
            }

            Console.ReadKey();
        }
    }
}

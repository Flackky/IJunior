using System;

namespace Fourth_part
{
    internal class Program
    {
        static bool CheckLimits(ref int currentValue, int addValue, int minValue, int maxValue, bool isAlive = true)
        {
            if (currentValue + addValue > maxValue)
            {
                isAlive = true;
                currentValue = maxValue;
            }
            else if (currentValue + addValue < minValue)
            {
                isAlive = false;
                currentValue = minValue;
            }
            else
            {
                isAlive = true;
                currentValue += addValue;
            }

            return isAlive;
        }

        static string FillDrawnBar(int iteration, int endIteration, string symbol)
        {
            string fillingBar = "";

            for (int i = iteration; i < endIteration; i++)
            {
                fillingBar += symbol;
            }

            return fillingBar;
        }

        static void DrawBar(int value, int maxValue, ConsoleColor filledColor, ConsoleColor unfilledColor, int position)
        {
            ConsoleColor defaultColor = Console.ForegroundColor;
            string bar = "";
            string symbolFilled = "#";
            string symbolUnfilled = "_";

            bar = FillDrawnBar(0, value, symbolFilled);

            Console.SetCursorPosition(0, position);
            Console.Write("[");
            Console.ForegroundColor = filledColor;
            Console.Write(bar);
            Console.ForegroundColor = unfilledColor;

            bar = "";
            bar = FillDrawnBar(value, maxValue, symbolUnfilled);

            Console.Write(bar);
            Console.ForegroundColor = defaultColor;
            Console.Write("]");
        }

        static void Main(string[] args)
        {
            int valueDifference;
            string userInput;
            bool isAlive = true;
            bool canEnter = true;
            int multiplier = 10;
            int currentHealth = 10;
            int healthPercent = 1;
            int maxHealth = 10;
            int minHealth = 0;
            int currentMana = 10;
            int manaPercent = 1;
            int maxMana = 10;
            int minMana = 0;

            while (canEnter)
            {
                if (isAlive == false)
                {
                    DrawBar(currentHealth, maxHealth, ConsoleColor.Green, ConsoleColor.DarkGreen, 0);
                    Console.Write(" - Вы погибли.");
                }
                else
                {
                    DrawBar(currentHealth, maxHealth, ConsoleColor.Green, ConsoleColor.DarkGreen, 0);
                    healthPercent = currentHealth * multiplier;
                    Console.Write($" - {healthPercent}%");
                }
                
                DrawBar(currentMana, maxMana, ConsoleColor.Magenta, ConsoleColor.DarkMagenta, 1);
                manaPercent = currentMana * multiplier;
                Console.Write($" - {manaPercent}%");

                Console.Write("\n\nВведите номер команды:\n1 - изменить вид шкалы здоровья/маны.\n2 - выйти из программы.\n-> ");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case "1":
                        Console.Write("Введите положительное или отрицательное число, чтобы увеличить или отнять (Соответственно) очки здоровья: ");
                        valueDifference = Convert.ToInt32(Console.ReadLine());

                        isAlive = CheckLimits(ref currentHealth, valueDifference, minHealth, maxHealth, isAlive);

                        Console.Write("Введите положительное или отрицательное число, чтобы увеличить или отнять (Соответственно) очки маны: ");
                        valueDifference = Convert.ToInt32(Console.ReadLine());

                        CheckLimits(ref currentMana, valueDifference, minMana, maxMana);

                        Console.Clear();
                        break;
                    case "2":
                        canEnter = false;
                        break;
                    default:
                        Console.Write("Неизвестная команда");
                        Console.ReadKey();
                        Console.Clear();
                        break;
                }
            }               
        }
    }
}

using System;

namespace Sixth_part
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddAction = "1";
            const string BanAction = "2";
            const string UnbanAction = "3";
            const string DeleteAction = "4";
            const string ExitAction = "5";

            const string AddMessage = AddAction + " - Добавить игрока\n";
            const string BanMessage = BanAction + " - Заблокировать игрока\n";
            const string UnbanMessage = UnbanAction + " - Разблокировать игрока\n";
            const string DeleteMessage = DeleteAction + " - Удалить игрока\n";
            const string ExitMessage = ExitAction + " - выход";
            bool canEnter = true;

            int playerId = 0;
            int playerQuantity = 0;
            Player[] players = new Player[playerQuantity];
            Database database = new Database();

            while (canEnter)
            {
                Console.SetCursorPosition(0, 20);
                Console.WriteLine("Список игроков:");

                for (int i = 0; i < players.Length; i++)
                {
                    players[i].ShowStats();
                }

                Console.SetCursorPosition(0, 0);
                Console.Write($"Меню:\n{AddMessage}{BanMessage}{UnbanMessage}{DeleteMessage}{ExitMessage}\n-> ");

                switch (Console.ReadLine())
                {
                    case AddAction:
                        database.AddNewPlayer(ref players, ref playerId);
                        break;
                    case BanAction:

                        break;
                    case UnbanAction:

                        break;
                    case DeleteAction:

                        break;
                    case ExitAction:
                        canEnter = false;
                        break;
                    default:
                        Console.WriteLine("Неизвестная команда.");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Player
    {
        public int Id { get; private set; }
        public string Name { get; private set; }
        public int Level { get; private set; }
        public int HealthPoints { get; private set; }
        public int ManaPoints { get; private set; }
        public bool IsBanned { get; private set; }

        public Player()
        {
            Id = 0;
            Name = "Игрок";
            Level = 1;
            HealthPoints = 100;
            ManaPoints = 10000;
            IsBanned = false;
        }

        public Player(int id, string name, int level)
        {
            Id = id;
            Name = name;
            Level = level;
            HealthPoints = 100;
            ManaPoints = 10000;
            IsBanned = false;

        }

        public void ShowStats()
        {
            Console.Write($"ID игрока - {Id} Имя - {Name} Уровень - {Level} Очки здоровья - {HealthPoints} Очки маны - {ManaPoints} ");

            if (IsBanned)
                Console.WriteLine("Блокировка - Есть");
            else
                Console.WriteLine("Блокировка - Отсутствует");
        }
    }

    class Database
    { 
        public Player EnterPlayerInfo(int playerId)
        {
            Random random = new Random();
            int randomMin = 1;
            int randomMax = 101;

            Console.Write("Введите имя игрока: ");
            string name = Console.ReadLine();
            Player player = new Player(playerId, name, random.Next(randomMin, randomMax));

            Console.Write("Информация о добавленном игроке: ");
            player.ShowStats();
            return player;
        }

        public void AddNewPlayer(ref Player[] players, ref int playerId)
        {
            Player player = EnterPlayerInfo(playerId);
            Player[] tempPlayers = new Player[players.Length + 1];

            for (int i = 0; i < players.Length; i++)
            {
                tempPlayers[i] = players[i];
            }

            tempPlayers[tempPlayers.Length - 1] = player;
            players = tempPlayers;
            playerId++;
        }

        public void BanPlayer(ref Player[] players, int playersId)
        {
            
        }
    }
}

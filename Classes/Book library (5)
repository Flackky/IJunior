using System;
using System.Collections.Generic;

namespace Sixth_part
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddAction = "1";
            const string DeleteAction = "2";
            const string ShowAction = "3";
            const string ShowByTitleAction = "4";
            const string ShowByAuthorAction = "5";
            const string ShowByYearAction = "6";         
            const string ExitAction = "7";

            string addMessage = AddAction + " - Добавить книгу в хранилище\n";
            string deleteMessage = DeleteAction + " - Убрать книгу из хранилища\n";
            string showMessage = ShowAction + " - Вывести список всех книг, которые находятся в хранилище\n";
            string showByTitleMessage = ShowByTitleAction + " - Вывести список книг по названию\n";
            string showByAuthorMessage = ShowByAuthorAction + " - Вывести список книг по автору\n";
            string showByYearMessage = ShowByYearAction + " - Вывести список книг по году выпуска\n";
            string exitMessage = ExitAction + " - выход";
            bool isWorking = true;

            List<Book> books = new List<Book>();
            Library library = new Library(books);

            while (isWorking)
            {
                Console.Write($"Меню:\n{addMessage}{deleteMessage}{showMessage}{showByTitleMessage}{showByAuthorMessage}{showByYearMessage}{exitMessage}\n-> ");

                switch (Console.ReadLine())
                {
                    case AddAction:
                        library.AddNewBook();
                        break;
                    case DeleteAction:
                        library.DeleteBook();
                        break;
                    case ShowAction:
                        library.ShowWholeBookList();
                        break;
                    case ShowByTitleAction:
                        library.ShowBookListByTitle();
                        break;
                    case ShowByAuthorAction:
                        library.ShowBookListByAuthor();
                        break;
                    case ShowByYearAction:
                        library.ShowBookListByYear();
                        break;
                    case ExitAction:
                        isWorking = false;
                        break;
                    default:
                        Console.WriteLine("Неизвестная команда.");                      
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Book
    {
        public string Title { get; private set; }
        public string Author { get; private set; }
        public int ReleaseDate { get; private set; }

        public Book()
        {
            Title = "Нет";
            Author = "Нет";
            ReleaseDate = 0;
        }

        public Book(string title, string author, int releaseDate)
        {
            Title = title;
            Author = author;
            ReleaseDate = releaseDate;
        }

        public void ShowInfo()
        {
            Console.Write($"Название книги - {Title}, Автор - {Author}, Дата выпуска - {ReleaseDate}\n");
        }
    }

    class Library
    {
        private List<Book> _books;

        public Library(List<Book> books)
        {
            _books = books;
        }

        public void ShowWholeBookList()
        {
            for (int i = 0; i < _books.Count; i++)
            {
                _books[i].ShowInfo();
            }
        }

        public void ShowBookListByTitle()
        {
            Console.WriteLine("Введите название книги.");
            string userInput = Console.ReadLine();

            for (int i = 0; i<_books.Count; i++)
            {
                if (userInput == _books[i].Title)
                    _books[i].ShowInfo();
            }
        }

        public void ShowBookListByAuthor()
        {
            Console.WriteLine("Введите автора книги.");
            string userInput = Console.ReadLine();

            for (int i = 0; i < _books.Count; i++)
            {
                if (userInput == _books[i].Author)
                    _books[i].ShowInfo();
            }
        }

        public void ShowBookListByYear()
        {
            Console.WriteLine("Введите год выпуска книги.");
            string unconvertedDate = Console.ReadLine();
            int convertedDate = ReadNumber(unconvertedDate);

            if (convertedDate != -1)
            {
                for (int i = 0; i < _books.Count; i++)
                {
                    if (convertedDate == _books[i].ReleaseDate)
                        _books[i].ShowInfo();
                }
            }
        }

        public void AddNewBook()
        {
            bool isExist = false;
            Console.Write("Введите название книги: ");
            string title = Console.ReadLine();
            Console.Write("Введите автора: ");
            string author = Console.ReadLine();
            Console.Write("Введите год выпуска: ");
            string unconvertedDate = Console.ReadLine();
            int convertedDate = ReadNumber(unconvertedDate);

            if (convertedDate != -1)
            {
                for (int i = 0; i < _books.Count; i++)
                {
                    if (title == _books[i].Title && author == _books[i].Author && convertedDate == _books[i].ReleaseDate)
                    {
                        Console.Write("Такая книга уже существует.");
                        Console.ReadKey();
                        isExist = true;
                        break;
                    }
                }

                if (isExist == false)
                {
                    Book book = new Book(title, author, convertedDate);
                    _books.Add(book);
                    Console.Write("Книга добавлена.");
                }
            }
        }

        public void DeleteBook()
        {
            int counter = 0;
            Console.Write("Введите название книги, которую необходимо удалить: ");
            string title = Console.ReadLine();
            Console.Write("Введите автора книги: ");
            string author = Console.ReadLine();
            Console.Write("Введите дату выпуска книги: ");
            string unconvertedDate = Console.ReadLine();
            int convertedDate = ReadNumber(unconvertedDate);

            if (convertedDate != -1)
            {
                for (int i = 0; i < _books.Count; i++)
                {
                    if (title == _books[i].Title && author == _books[i].Author && convertedDate == _books[i].ReleaseDate)
                    {
                        counter++;
                        _books.Remove(_books[i]);
                    }
                        
                }

                if (counter == 0)
                {
                    Console.WriteLine("Такой книги не существует.");
                }
                else
                {
                    Console.WriteLine("Книга удалена.");
                }
            }
        }

        public int ReadNumber(string unconvertedNumber)
        {
            int convertedNumber;

            if (Int32.TryParse(unconvertedNumber, out convertedNumber) && convertedNumber >= 0)
            {
                return convertedNumber;
            }
            else
            {
                Console.WriteLine("Неверный формат записи даты выпуска.");
            }

            return -1;
        }
    }
}

using System;

namespace Sixth_part
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string DrawAction = "1";
            const string ChangeСordinatesAction = "2";
            const string ExitAction = "3";
            
            const string DrawMessage = DrawAction + " - Отрисовать игрока в консоли\n";
            const string ChangeСordinatesMessage = ChangeСordinatesAction + " - Сменить кординты игрока по \"X\" и \"Y\"\n";
            const string ExitMessage = ExitAction + " - выход";           
            bool canEnter = true;

            Renderer renderer = new Renderer();
            int cordinateX = 5;
            int cordinateY = 5;
            Player player = new Player(cordinateX, cordinateY);
            

            while (canEnter)
            {
                Console.Clear();
                Console.Write($"Меню:\n{DrawMessage}{ChangeСordinatesMessage}{ExitMessage}\n-> ");

                switch (Console.ReadLine())
                {
                    case DrawAction:
                        renderer.DrawPlayer(player.X, player.Y);
                        break;
                    case ChangeСordinatesAction:
                        EnterCordinates(player);
                        break;
                    case ExitAction:
                        canEnter = false;
                        break;
                    default:
                        Console.WriteLine("Неизвестная команда.");
                        break;
                }
            }
        }

        static void EnterCordinates(Player player)
        {
            int convertedInputX = 0;
            int convertedInputY = 0;
            Console.WriteLine("Введите новую кординату X:");
            string cordinatesX = Console.ReadLine();
            Console.WriteLine("Введите новую кординату Y:");
            string cordinatesY = Console.ReadLine();

            if (Int32.TryParse(cordinatesX, out convertedInputX) && Int32.TryParse(cordinatesY, out convertedInputY) && convertedInputX >= 0 && convertedInputY >= 0)
            {               
                player.ChangeCordinates(convertedInputX, convertedInputY);
            }
            else
            {
                Console.WriteLine("Неверный формат кординат.");
                Console.ReadKey();
            }            
        }
    }

    class Player
    {
        private int _x;
        private int _y;

        public int X
        {
            get
            {
                return _x;
            }
            private set
            { 
                _x = value; 
            }
        }

        public int Y
        {
            get 
            { 
                return _y; 
            }
             private set 
            { 
                _y = value; 
            }
        }

        public Player(int x, int y)
        {
            _x = x;
            _y = y;
        }

        public void ChangeCordinates(int x, int y)
        {
            _x = x;
            _y = y;
        }
    }

    class Renderer
    {
        public void DrawPlayer(int x, int y, char symbol = 'P')
        {
            Console.Clear();
            Console.SetCursorPosition(x, y);
            Console.WriteLine(symbol);
            Console.ReadKey();          
        }
    }
}

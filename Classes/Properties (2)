using System;

namespace Sixth_part
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string DrawAction = "1";
            const string ChangeСordinatesAction = "2";
            const string ExitAction = "3";

            const string DrawMessage = DrawAction + " - Отрисовать игрока в консоли\n";
            const string ChangeСordinatesMessage = ChangeСordinatesAction + " - Сменить кординты игрока по \"X\" и \"Y\"\n";
            const string ExitMessage = ExitAction + " - выход";
            bool canEnter = true;

            Renderer renderer = new Renderer();
            int positionCordinateX = 5;
            int positionCordinateY = 5;
            Player player = new Player(positionCordinateX, positionCordinateY);

            while (canEnter)
            {
                Console.Clear();
                Console.Write($"Меню:\n{DrawMessage}{ChangeСordinatesMessage}{ExitMessage}\n-> ");

                switch (Console.ReadLine())
                {
                    case DrawAction:
                        renderer.DrawPlayer(player.PositionX, player.PositionY);
                        break;
                    case ChangeСordinatesAction:
                        player.EnterPosition(player);
                        break;
                    case ExitAction:
                        canEnter = false;
                        break;
                    default:
                        Console.WriteLine("Неизвестная команда.");
                        break;
                }
            }
        }
    }

    class Player
    {
        public int PositionX { get; private set; }
        public int PositionY { get; private set; }

        public Player(int positionCordinateX, int positionCordinateY)
        {
            PositionX = positionCordinateX;
            PositionY = positionCordinateY;
        }

        public void EnterPosition(Player player)
        {
            int convertedInputX;
            int convertedInputY;
            Console.WriteLine("Введите новую кординату X:");
            string cordinateX = Console.ReadLine();
            Console.WriteLine("Введите новую кординату Y:");
            string cordinateY = Console.ReadLine();

            if (Int32.TryParse(cordinateX, out convertedInputX) && Int32.TryParse(cordinateY, out convertedInputY) && convertedInputX >= 0 && convertedInputY >= 0)
            {
                player.SetPosition(convertedInputX, convertedInputY);
            }
            else
            {
                Console.WriteLine("Неверный формат кординат.");
                Console.ReadKey();
            }
        }

        public void SetPosition(int positionCordinateX, int positionCordinateY)
        {
            PositionX = positionCordinateX;
            PositionY = positionCordinateY;
        }
    }

    class Renderer
    {
        public void DrawPlayer(int positionCordinateX, int positionCordinateY, char symbol = 'P')
        {
            Console.Clear();
            Console.SetCursorPosition(positionCordinateX, positionCordinateY);
            Console.WriteLine(symbol);
            Console.ReadKey();
        }
    }
}

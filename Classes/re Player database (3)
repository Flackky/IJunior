using System;
using System.Collections.Generic;

namespace Sixth_part
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddAction = "1";
            const string BanAction = "2";
            const string UnbanAction = "3";
            const string DeleteAction = "4";
            const string ExitAction = "5";

            const string AddMessage = AddAction + " - Добавить игрока\n";
            const string BanMessage = BanAction + " - Заблокировать игрока\n";
            const string UnbanMessage = UnbanAction + " - Разблокировать игрока\n";
            const string DeleteMessage = DeleteAction + " - Удалить игрока\n";
            const string ExitMessage = ExitAction + " - выход";
            bool canEnter = true;

            string userInput;
            List<Player> players = new List<Player>();
            Database database = new Database(players);

            while (canEnter)
            {
                database.ShowPlayerList(database.Players);

                Console.SetCursorPosition(0, 0);
                Console.Write($"Меню:\n{AddMessage}{BanMessage}{UnbanMessage}{DeleteMessage}{ExitMessage}\n-> ");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case AddAction:
                        database.AddNewPlayer(database.Players);
                        break;
                    case BanAction:
                        database.BanPlayer(database.Players);
                        break;
                    case UnbanAction:
                        database.UnbanPlayer(database.Players);
                        break;
                    case DeleteAction:
                        database.DeletePlayer(database.Players);
                        break;
                    case ExitAction:
                        canEnter = false;
                        break;
                    default:
                        Console.WriteLine("Неизвестная команда.");
                        Console.ReadKey();
                        Console.Clear();
                        break;
                }
            }
        }
    }

    class Player
    {
        public static int Ids { get; private set; }
        public int Id { get; private set; }
        public string Name { get; private set; }
        public int Level { get; private set; }
        public int HealthPoints { get; private set; }
        public int ManaPoints { get; private set; }
        public bool IsBanned { get; private set; }

        public Player()
        {
            Id = ++Ids;
            Name = "Игрок";
            Level = 1;
            HealthPoints = 100;
            ManaPoints = 10000;
            IsBanned = false;
        }

        public Player(string name, int level)
        {
            Id = Ids++;
            Name = name;
            Level = level;
            HealthPoints = 100;
            ManaPoints = 10000;
            IsBanned = false;
        }

        public void ShowStats()
        {
            Console.Write($"ID игрока - {Id}, Имя - {Name}, Уровень - {Level}, Очки здоровья - {HealthPoints}, Очки маны - {ManaPoints}, ");

            if (IsBanned)
                Console.WriteLine("Блокировка - Есть");
            else
                Console.WriteLine("Блокировка - Отсутствует");
        }

        public void SetBannedStatus()
        {
            IsBanned = true;
        }

        public void SetUnbannedStatus()
        {
            IsBanned = false;
        }
    }

    class Database
    {
        public List<Player> Players { get; private set; }

        public Database (List<Player> players)
        {
            Players = players;
        }

        public void ShowPlayerList(List<Player> players)
        {
            Console.SetCursorPosition(0, 20);
            Console.WriteLine("Список игроков:");

            for (int i = 0; i < players.Count; i++)
            {
                players[i].ShowStats();
            }
        }

        public void AddNewPlayer(List<Player> players)
        {
            Random random = new Random();
            int randomMin = 1;
            int randomMax = 101;

            Console.Write("Введите имя игрока: ");
            string name = Console.ReadLine();
            Player player = new Player(name, random.Next(randomMin, randomMax));
            players.Add(player);

            Console.WriteLine("Информация о добавленном игроке: ");
            player.ShowStats();
            Console.ReadKey();
            Console.Clear();
        }

        public int GetPlayerId(List<Player> players)
        {
            string idInput = Console.ReadLine();
            int convertedId;

            if (Int32.TryParse(idInput, out convertedId))
            {
                for (int i = 0; i < players.Count; i++)
                {
                    if (players[i].Id == convertedId)
                    {
                        return i;
                    }
                }
            }

            return -1;
        }

        public void BanPlayer(List<Player> players)
        {
            int outputId;
            Console.Write("Введите ID игрока, которого необходимо заблокировать: ");
            outputId = GetPlayerId(players);

            if (outputId == -1)
            {
                Console.Write("Такого ID не существует.");
                Console.ReadKey();
            }
            else
            {
                players[outputId].SetBannedStatus();
            }

            Console.Clear();
        }

        public void UnbanPlayer(List<Player> players)
        {
            int outputId;
            Console.Write("Введите ID игрока, которого необходимо разлокировать: ");
            outputId = GetPlayerId(players);

            if (outputId == -1)
            {
                Console.Write("Такого ID не существует.");
                Console.ReadKey();
            }
            else
            {
                players[outputId].SetUnbannedStatus();
            }

            Console.Clear();
        }

        public void DeletePlayer(List<Player> players)
        {
            int outputId;
            Console.Write("Введите ID игрока, которого необходимо удалить: ");
            outputId = GetPlayerId(players);

            if (outputId == -1)
            {
                Console.Write("Такого ID не существует.");
                Console.ReadKey();
            }
            else
            {
                players.Remove(players[outputId]);
            }

            Console.Clear();
        }
    }
}
